diff --git a/CMakeLists.txt b/CMakeLists.txt
index ceee0e9..21264a1 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -10,7 +10,7 @@ add_library(${PROJECT_NAME}
 
 # Where to search for the header
 # The BUILD/INSTALL interface expressions are for exporting
-target_include_directories(${PROJECT_NAME} PRIVATE
+target_include_directories(${PROJECT_NAME} PUBLIC
 	$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/sago>
 	$<INSTALL_INTERFACE:sago>
 )
diff --git a/sago/platform_folders.cpp b/sago/platform_folders.cpp
index f55e4ad..c486269 100644
--- a/sago/platform_folders.cpp
+++ b/sago/platform_folders.cpp
@@ -177,6 +177,10 @@ static void appendExtraFolders(const char* envName, const char* defaultValue, st
 
 namespace sago {
 
+std::string getHomeDir() {
+  return getHome();
+}
+
 std::string getDataHome() {
 #if defined(_WIN32)
 	return GetAppData();
diff --git a/sago/platform_folders.h b/sago/platform_folders.h
index bd6c0d5..7af8435 100644
--- a/sago/platform_folders.h
+++ b/sago/platform_folders.h
@@ -37,6 +37,14 @@ SOFTWARE.
  */
 namespace sago {
 
+/**
+* Retrives the effective user's home dir.
+* If the user is running as root we ignore the HOME environment. It works badly with sudo.
+* Writing to $HOME as root implies security concerns that a multiplatform program cannot be assumed to handle.
+* @return The home directory. HOME environment is respected for non-root users if it exists.
+*/
+std::string getHomeDir();
+
 /**
  * Retrives the base folder for storring data files.
  * You must add the program name yourself like this:
